/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.examinationCop;

import com.alibaba.fastjson.JSON;
import com.mysql.cj.xdevapi.JsonString;
import dao.EncounterDao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Diagnose;
import model.Encounter;
import ui.MainMenu;
import java.util.HashMap;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;

/**
 *
 * @author ziyu
 */
public class ExaminationList extends javax.swing.JPanel {

    private EncounterDao eDao = new EncounterDao();
    private List<Encounter> encounterList = new ArrayList<>();
    public HashMap<String, String> etl = new HashMap<>();
    private ButtonGroup group = new ButtonGroup();
    private Diagnose diag;
    private Encounter selectedEncounter;
    private boolean isSubmitted = false;

    /**
     * Creates new form ExaminationCRUD
     */
    public ExaminationList() {
        initComponents();
        try {
            showTable();

//            for (Encounter en : encounterList) {
//                System.out.println(en.toString());
//            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void showTable() throws Exception {

        DefaultTableModel model = (DefaultTableModel) tblExaminList.getModel();
        model.setRowCount(0);
        encounterList.addAll(eDao.getAllEncounterNotExamined());
        for (Encounter en : encounterList) {
            System.out.println(en.toString());
            Object[] row = new Object[3];

            row[0] = en.getEncounterId();
            row[1] = en.getPatientId();
            row[2] = en.getDoctorId();
            model.addRow(row);
        }

        group.add(jrbBU);
        group.add(jrbCT);
        group.add(jrbRBT);
        group.add(jrbXray);

    }

//    private void refreshtable() throws Exception {
//        DefaultTableModel model2 = (DefaultTableModel) tblExaminOutcome.getModel(); 
//        model2.setRowCount(0);
//        for (Examin e : etl) {
//        Object[] rows = new Object[2];
//            rows[0] = ;
//            rows[1] = ;
//            model2.addRow(rows);
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblExaminList = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblDoctorDiagnose = new javax.swing.JLabel();
        jrbXray = new javax.swing.JRadioButton();
        jrbRBT = new javax.swing.JRadioButton();
        jrbBU = new javax.swing.JRadioButton();
        jrbCT = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblExaminOutcome = new javax.swing.JTable();
        btnSubmit = new javax.swing.JButton();
        txtOutcome = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblExaminList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Encounter ID", "patient ID", "Doctor ID"
            }
        ));
        tblExaminList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblExaminListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblExaminList);
        if (tblExaminList.getColumnModel().getColumnCount() > 0) {
            tblExaminList.getColumnModel().getColumn(2).setHeaderValue("Doctor ID");
        }

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/jiankang.png"))); // NOI18N
        jLabel1.setText("HealthPro Examination Corperation");

        jLabel3.setText("Doctor Instruction:");

        lblDoctorDiagnose.setBackground(new java.awt.Color(204, 204, 204));
        lblDoctorDiagnose.setAutoscrolls(true);

        jrbXray.setText("X-ray");
        jrbXray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbXrayActionPerformed(evt);
            }
        });

        jrbRBT.setText("routine blood test");
        jrbRBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbRBTActionPerformed(evt);
            }
        });

        jrbBU.setText("b-ultrasonics");
        jrbBU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBUActionPerformed(evt);
            }
        });

        jrbCT.setText("CT");
        jrbCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCTActionPerformed(evt);
            }
        });

        tblExaminOutcome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Examin", "Outcome"
            }
        ));
        tblExaminOutcome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblExaminOutcomeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblExaminOutcome);

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        txtOutcome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOutcomeActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblDoctorDiagnose, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnAdd)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jrbXray)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(223, 223, 223)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jrbCT)
                                        .addComponent(jrbBU)))
                                .addComponent(jrbRBT))
                            .addGap(127, 127, 127))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnSubmit)
                            .addGap(256, 256, 256))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(103, 103, 103)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDoctorDiagnose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbXray)
                            .addComponent(jrbCT))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbRBT)
                            .addComponent(jrbBU))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(txtOutcome))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSubmit)))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblExaminListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblExaminListMouseClicked
        // TODO add your handling code here:

        int selectRowIndex = tblExaminList.getSelectedRow();

        diag = JSON.parseObject(encounterList.get(selectRowIndex).getDiagnosis(), Diagnose.class);
        lblDoctorDiagnose.setText(diag.getDiagnose());

        selectedEncounter = encounterList.get(selectRowIndex);
    }//GEN-LAST:event_tblExaminListMouseClicked

    private void jrbXrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbXrayActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jrbXrayActionPerformed

    private void jrbRBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbRBTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbRBTActionPerformed

    private void tblExaminOutcomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblExaminOutcomeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblExaminOutcomeMouseClicked

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (isSubmitted) {
            JOptionPane.showMessageDialog(this, "Already Submitted.");
            return;
        }
        if (etl.isEmpty()) {
            JOptionPane.showMessageDialog(this, "please excute at least one examination according to the diagnose");
            return;
        }

        diag.setExamins(etl);
        String jsonString = JSON.toJSONString(diag);

        if (null != selectedEncounter) {
            selectedEncounter.setDiagnosis(jsonString);
        }

        try {
            eDao.updateEncounter(selectedEncounter);
            JOptionPane.showMessageDialog(this, "success!");
            isSubmitted = true;
        } catch (Exception e) {
            return;
            //e.printStackTrace();
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void jrbCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbCTActionPerformed

    private void jrbBUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBUActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jrbBUActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model2 = (DefaultTableModel) tblExaminOutcome.getModel();
        String outcome = txtOutcome.getText();
        if (outcome.equals("")) {
            JOptionPane.showMessageDialog(this, "please enter the outcome of the examination");
            return;
        }

        String key = "";

        if (jrbBU.isSelected()) {
            key = jrbBU.getText();
        } else if (jrbCT.isSelected()) {
            key = jrbCT.getText();
        } else if (jrbRBT.isSelected()) {
            key = jrbRBT.getText();
        } else {
            // xray
            key = jrbXray.getText();
        }

        etl.put(key, outcome);

        model2.setRowCount(0);
        for (String option : etl.keySet()) {
            String value = etl.get(option);

            Object[] row = new Object[3];

            row[0] = option;
            row[1] = value;
            model2.addRow(row);

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtOutcomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOutcomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOutcomeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton jrbBU;
    private javax.swing.JRadioButton jrbCT;
    private javax.swing.JRadioButton jrbRBT;
    private javax.swing.JRadioButton jrbXray;
    private javax.swing.JLabel lblDoctorDiagnose;
    private javax.swing.JTable tblExaminList;
    private javax.swing.JTable tblExaminOutcome;
    private javax.swing.JTextField txtOutcome;
    // End of variables declaration//GEN-END:variables
}
